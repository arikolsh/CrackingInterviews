package problemsolving.ibit;

import org.junit.Test;

import java.util.ArrayList;
import java.util.Arrays;

import static org.junit.Assert.assertEquals;

public class MinJumpsTest {
    @Test
    public void test() {
        ArrayList<Integer> a1 = new ArrayList<>(Arrays.asList(2, 3, 1, 1, 4));
        ArrayList<Integer> a2 = new ArrayList<>(Arrays.asList(33, 21, 50, 0, 0, 46, 34, 3, 0, 12, 33, 0, 31, 37, 15, 17,
                34, 18, 0, 4, 12, 41, 18, 35, 37, 34, 0, 47, 0, 39, 32, 49, 5, 41, 46, 26, 0, 2, 49, 35, 4, 19, 2, 27,
                23, 49, 19, 38, 0, 33, 47, 1, 21, 36, 18, 33, 0, 1, 0, 39, 0, 22, 0, 9, 36, 45, 31, 4, 14, 48, 2, 33,
                0, 39, 0, 37, 48, 44, 0, 11, 24, 16, 10, 23, 22, 41, 32, 14, 22, 16, 23, 38, 42, 16, 15, 0, 39, 23, 0,
                42, 15, 25, 0, 41, 2, 48, 28));
        ArrayList<Integer> a3 = new ArrayList<>(Arrays.asList(18, 4, 33, 29, 0, 6, 39, 43, 38, 21, 14, 3, 20, 0, 45, 22,
                12, 11, 2, 14, 0, 43, 24, 24, 21, 42, 27, 12, 14, 0, 25, 19, 36, 32, 25, 29, 50, 8, 19, 37, 21, 0, 3, 29,
                21, 9, 10, 29, 1, 0, 0, 38, 33, 38, 17, 27, 0, 0, 43, 0, 12, 0, 8, 20, 0, 15, 0, 18, 36, 11, 12, 0, 40,
                10, 15, 9, 33, 21, 0, 15, 0, 2, 46, 0, 11, 13, 9, 13, 18, 5, 45, 4, 10, 24, 11, 9, 47, 34, 11, 4, 13, 8,
                1, 41, 8, 8, 42, 0, 30, 27, 12, 17, 28, 10, 0, 30, 25, 19, 6, 42, 16, 22, 43, 17, 32, 24, 20, 2, 0, 5, 0,
                21, 38, 7, 42, 41, 38, 42, 11, 0, 3, 38, 49, 0, 0, 0, 11, 11, 30, 33, 27, 23, 0, 0, 15, 0, 0, 43, 19, 9,
                0, 34, 36, 1, 0, 0, 0, 0, 0, 40, 18, 18, 26, 43, 0, 17, 30, 6, 44, 0, 39, 18, 28, 12, 0, 0, 38, 0, 17,
                48, 35, 22, 45, 32, 0, 14, 8, 30, 17, 36, 0, 0, 30, 0, 17, 15, 0, 7, 46, 0, 0, 33, 0, 23, 43, 19, 34, 0,
                19, 33, 0, 29, 0, 50, 44, 6, 0, 0, 17, 0, 36, 47, 34, 12, 23, 47, 30, 0, 9, 22, 3, 33, 50, 38, 39, 45,
                19, 8, 0, 35, 36, 0, 0, 0, 0, 43, 17, 49, 22, 0, 0, 38, 31, 0, 35, 0, 0, 12, 0, 20, 50, 26, 40, 0, 0, 0,
                18, 36, 7, 9, 19, 0, 9, 0, 24, 31, 40, 7, 35, 0, 24, 0, 0, 40, 0, 2, 37, 19, 40, 23, 39, 0, 9, 2, 0, 0,
                35, 27, 5, 42, 0, 0, 17, 48, 27, 50, 18, 11, 50, 0, 25, 48, 12, 28, 39, 12, 0, 18, 8, 0, 4, 0, 32, 14, 0,
                24, 0, 7, 11, 0, 16, 0, 43, 0, 3, 0, 0, 15, 8, 33, 31, 47, 46, 48, 10, 23, 15, 0, 32, 6, 5, 44, 47, 48, 6,
                12, 3, 2, 33, 5, 2, 0, 28, 0, 43, 0, 30, 0, 24, 45, 0, 17, 18, 22, 49, 0, 50, 32, 31, 0, 0, 31, 0, 22, 9,
                17, 32, 10, 0, 0, 28, 30, 26, 25, 8, 5, 48, 38, 47, 17, 34, 1, 27, 19, 10, 49, 7, 3, 35, 0, 23, 15, 0, 0,
                47, 0, 19, 0, 46, 2, 13, 38, 30, 0, 0, 46, 0, 0, 40, 40, 8, 47, 0, 39, 0, 29, 26, 3, 46, 31, 24, 18, 20,
                34, 21, 6, 32, 0, 0, 50, 49, 34, 0, 0, 41, 42, 20, 34, 36, 3, 24, 26, 5, 5, 47, 13, 0, 6, 22, 0, 15, 49,
                27, 0, 48, 41, 0, 40, 0, 35, 8, 18, 47, 29, 2, 37, 35, 0, 3, 41, 42, 14, 2, 46, 27, 0, 21, 32, 24, 23, 0,
                26, 34, 0, 27, 40, 0, 44, 32, 50, 4, 43, 9, 0, 3, 45, 0, 0, 33, 36, 4, 37, 37, 0, 4, 0, 12, 23, 23, 0, 48,
                8, 16, 50, 28, 0, 1, 40, 48, 25, 46, 18, 44, 48, 36, 33, 11, 9, 6, 41, 0, 7, 0, 43, 43, 26, 0, 16, 0, 30,
                1, 10, 16, 0, 41, 3, 12, 0, 41, 34, 28, 50, 15, 19, 22, 21, 49, 42, 44, 27, 39, 23, 0, 22, 12, 0, 0, 42,
                47, 50, 38, 18, 42, 10, 32, 7, 49, 25, 0, 34, 33, 28, 45, 22, 7, 0, 0, 34, 20, 0, 26, 8, 38, 12, 0, 19, 0,
                16, 20, 8, 3, 0, 32, 0, 42, 0, 14, 6, 37, 26, 5, 40, 1, 11, 47, 29, 0, 39, 41, 8, 0, 49, 5));
        assertEquals(2, new MinJumps().solve(a1));
        assertEquals(3, new MinJumps().solve(a2));
        assertEquals(16, new MinJumps().solve(a3));






    }

}
